#!/bin/bash

# Upload ct_report directory on Github pages for trusted builds

# Check if trusted
test "$TRAVIS_SECURE_ENV_VARS" = true || \
    { echo "TRAVIS_SECURE_ENV_VARS is not true. Cancel uploading"; exit 0; }
# Test that the directory exists
test -d test/ejabberd_tests/ct_report || \
    { echo "Test directory does not exist. Cancel uploading"; exit 0; }

set -e

# Configure git
git config --global user.email "$(git --no-pager show -s --format='%ae' HEAD)"
git config --global user.name  "$(git --no-pager show -s --format='%an' HEAD)"

mkdir -p ~/.ssh/

# Decrypt key
# This command is generated by "travis encrypt-file ~/.ssh/travis_deploy_rsa"
openssl aes-256-cbc -K $encrypted_1e58cc98c92a_key -iv $encrypted_1e58cc98c92a_iv \
    -in .travis_deploy_rsa.enc \
    -out ~/.ssh/travis_deploy_rsa -d

# Start the ssh agent
eval "$(ssh-agent -s)"

# This key should have push access
chmod 600 ~/.ssh/travis_deploy_rsa 
ssh-add ~/.ssh/travis_deploy_rsa

git clone "git@github.com:arcusfelis/mongooseim-ct-reports.git"
cd mongooseim-ct-reports

# Create a new directory for HTML files
cp -rdp ../test/ejabberd_tests/ct_report "$TRAVIS_JOB_NUMBER"
git add "$TRAVIS_JOB_NUMBER"
git commit -m "Publish reports for $TRAVIS_JOB_NUMBER"

# Try to push several times in case of race conditions
for i in 1 2 3 4 5; do
    git push origin gh-pages && break
    echo "Retry pushing $i"
    sleep $i
    git pull
done

echo "CT reports were uploaded to http://arcusfelis.github.io/mongooseim-ct-reports/$TRAVIS_JOB_NUMBER/"
