swagger: '2.0'
info:
  version: "0.0.1"
  title: "MongooseIM client REST API"
  description: |
    This API described alternate, to XMPP way of using MongooseIM.
    All the requests require authantication. Thanks to that the server always knows
    who sent the request and can decide whether given user is authorized or not
basePath: /api
schemes:
  - https
paths:
  /messages:
    post:
      description: Sends messages
      parameters:
        - in: body
          name: message
          description: the message to be sent
          required: true
          schema:
            $ref: '#/definitions/SendMessage'
      responses:
        200:
          description: Message was successfully sent
  /messages/{with}/{limit}:
    get:
      description: |
        Gets recent messages from the archive. For the authenticated users.
      parameters:
        - name: with
          type: string
          description: JID of the user with whom the
          in: path
          required: true
        - name: limit
          in: path
          description: Number of recent messages to return. Lower than 500
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            title: Messages
            type: array
            items:
              $ref: '#/definitions/RecvMessage'
  /messages/{with}/{timestamp}/{limit}:
    get:
      description: |
        Gets recent messages from the archive. For the authenticated users.
      parameters:
        - name: with
          type: string
          description: JID of the user with whom the
          in: path
          required: true
        - name: timestamp
          type: integer
          description: Timestamp in seconds. Retunred messages will be older then the provided timestamp
          in: path
          required: true
        - name: limit
          in: path
          description: Number of recent messages to return. Lower than 500
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            title: Messages
            type: array
            items:
              $ref: '#/definitions/RecvMessage'
security:
  - mongoose_basic_auth: []
securityDefinitions:
  mongoose_basic_auth:
    type: basic
definitions:
  SendMessage:
    properties:
      to:
        $ref: '#/definitions/JID'
      msg:
        type: string
  RecvMessage:
    properties:
      sender:
        $ref: '#/definitions/JID'
      timestamp:
        type: integer
        description: Unix timestamp in seconds when the message was sent
      message_id:
        type: string
      body:
        type: string
        description: Message content
  JID:
    type: string
    description: |
      This is user's JID (Jabber ID) which consist of username and server.
      Example: alice@wonderland.com
