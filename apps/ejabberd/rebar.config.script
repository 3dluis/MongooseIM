CONFIG1 = case os:getenv("OPENSSL_LIB") of
    false ->
        CONFIG;
    OpenSSL ->
        io:format("using OpenSSL ~p~n", [OpenSSL]),
        {port_specs, PortSpecs} = lists:keyfind(port_specs, 1, CONFIG),
        TlsDrvKey = "priv/lib/tls_drv.so",
        TlsDrvSpec = lists:keyfind(TlsDrvKey, 2, PortSpecs),
        Args = element(4, TlsDrvSpec),
        CFlags = {"CFLAGS", "$CFLAGS -I$OPENSSL_INC"},
        LDFlags = {"LDFLAGS", "$LDFLAGS -Wl,-rpath=$OPENSSL_LIB -L$OPENSSL_LIB -lssl"},
        NewEnv = {env, [CFlags, LDFlags]},
        NewArgs = lists:keyreplace(env, 1, Args, NewEnv),
        NewTlsDrvSpec = setelement(4, TlsDrvSpec, NewArgs),
        NewPortSpecs = lists:keyreplace(TlsDrvKey, 2, PortSpecs, NewTlsDrvSpec),
        lists:keyreplace(port_specs, 1, CONFIG, {port_specs, NewPortSpecs})
end,

case erlang:system_info(otp_release) of
    "17" ->
        io:format("disabling coverage for OTP 17~n"),
        Opts = [{cover_enabled, false},
                {cover_print_enabled, false},
                {cover_export_enabled, false}],
        lists:foldl(fun({Key, _}=Tuple, Acc) ->
                            lists:keyreplace(Key, 1, Acc, Tuple)
                    end, CONFIG1, Opts);
    _ ->
        CONFIG1
end.
